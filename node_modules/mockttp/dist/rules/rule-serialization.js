"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const serialization_1 = require("../util/serialization");
const matchers = require("./matchers");
const completionCheckers = require("./completion-checkers");
const request_handlers_1 = require("./requests/request-handlers");
const websocket_handlers_1 = require("./websockets/websocket-handlers");
function validateMockRuleData(data) {
    if (!data.matchers || data.matchers.length === 0) {
        throw new Error('Cannot create a rule without at least one matcher');
    }
    if (!data.handler) {
        throw new Error('Cannot create a rule with no handler');
    }
}
exports.validateMockRuleData = validateMockRuleData;
function serializeRuleData(data, stream) {
    validateMockRuleData(data);
    return {
        id: data.id,
        matchers: data.matchers.map(m => serialization_1.serialize(m, stream)),
        handler: serialization_1.serialize(data.handler, stream),
        completionChecker: data.completionChecker && serialization_1.serialize(data.completionChecker, stream)
    };
}
exports.serializeRuleData = serializeRuleData;
;
function deserializeRuleData(data, stream) {
    return {
        id: data.id,
        matchers: data.matchers.map((m) => serialization_1.deserialize(m, stream, matchers.MatcherLookup)),
        handler: serialization_1.deserialize(data.handler, stream, request_handlers_1.HandlerLookup),
        completionChecker: data.completionChecker && serialization_1.deserialize(data.completionChecker, stream, completionCheckers.CompletionCheckerLookup)
    };
}
exports.deserializeRuleData = deserializeRuleData;
function deserializeWebSocketRuleData(data, stream) {
    return {
        id: data.id,
        matchers: data.matchers.map((m) => serialization_1.deserialize(m, stream, matchers.MatcherLookup)),
        handler: serialization_1.deserialize(data.handler, stream, websocket_handlers_1.WsHandlerLookup),
        completionChecker: data.completionChecker && serialization_1.deserialize(data.completionChecker, stream, completionCheckers.CompletionCheckerLookup)
    };
}
exports.deserializeWebSocketRuleData = deserializeWebSocketRuleData;
//# sourceMappingURL=rule-serialization.js.map