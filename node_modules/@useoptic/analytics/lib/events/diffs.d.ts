import { RegisteredEvent } from '../interfaces/RegisterEvent';
import * as Joi from '@hapi/joi';
import 'joi-extract-type';
export declare const UserChangedCaptureOverviewTab: RegisteredEvent<Joi.extractMap<{
    currentTab: Joi.BoxStringSchema<Joi.Box<string, true>>;
    diffCount: Joi.BoxNumberSchema<Joi.Box<number, true>>;
    undocumentedUrlCount: Joi.BoxNumberSchema<Joi.Box<number, true>>;
}>>;
export declare const NewBodyDiffRendered: RegisteredEvent<Joi.extractMap<{
    requestCount: Joi.BoxNumberSchema<Joi.Box<number, true>>;
    responseCount: Joi.BoxNumberSchema<Joi.Box<number, true>>;
    regions: Joi.BoxArraySchema<Joi.Box<string, true>>;
}>>;
export declare const UserEnabledInferPolymorphism: RegisteredEvent<Joi.extractMap<{
    captureId: Joi.BoxStringSchema<Joi.Box<string, true>>;
    endpointId: Joi.BoxStringSchema<Joi.Box<string, true>>;
}>>;
export declare const UserBeganAddingNewUrl: RegisteredEvent<Joi.extractMap<{
    captureId: Joi.BoxStringSchema<Joi.Box<string, true>>;
    method: Joi.BoxStringSchema<Joi.Box<string, true>>;
    path: Joi.BoxStringSchema<Joi.Box<string, true>>;
    knownPathId: Joi.BoxStringSchema<Joi.Box<string, false>>;
}>>;
export declare const UserFinishedAddingNewUrl: RegisteredEvent<Joi.extractMap<{
    purpose: Joi.BoxStringSchema<Joi.Box<string, true>>;
    captureId: Joi.BoxStringSchema<Joi.Box<string, true>>;
    method: Joi.BoxStringSchema<Joi.Box<string, true>>;
    pathExpression: Joi.BoxStringSchema<Joi.Box<string, false>>;
}>>;
export declare const SuggestionDisplayed: RegisteredEvent<Joi.extractMap<{
    suggestion: Joi.BoxStringSchema<Joi.Box<string, true>>;
}>>;
export declare const UserAcceptedSuggestion: RegisteredEvent<Joi.extractMap<{
    captureId: Joi.BoxStringSchema<Joi.Box<string, true>>;
    suggestion: Joi.BoxStringSchema<Joi.Box<string, true>>;
}>>;
export declare const UserPreviewedSuggestion: RegisteredEvent<Joi.extractMap<{
    captureId: Joi.BoxStringSchema<Joi.Box<string, true>>;
    diff: Joi.BoxStringSchema<Joi.Box<string, true>>;
    diffAssertion: Joi.BoxStringSchema<Joi.Box<string, true>>;
    suggestion: Joi.BoxStringSchema<Joi.Box<string, true>>;
}>>;
export declare const UserResetDiff: RegisteredEvent<Joi.extractMap<{}>>;
export declare const ShowCommitCard: RegisteredEvent<Joi.extractMap<{
    message: Joi.BoxStringSchema<Joi.Box<string, true>>;
    captureId: Joi.BoxStringSchema<Joi.Box<string, true>>;
    suggestions: Joi.BoxNumberSchema<Joi.Box<number, true>>;
}>>;
export declare const UserCommittedChanges: RegisteredEvent<Joi.extractMap<{
    message: Joi.BoxStringSchema<Joi.Box<string, true>>;
    captureId: Joi.BoxStringSchema<Joi.Box<string, true>>;
    suggestions: Joi.BoxNumberSchema<Joi.Box<number, true>>;
}>>;
export declare const AddUrlModalNaming: RegisteredEvent<Joi.extractMap<{
    method: Joi.BoxStringSchema<Joi.Box<string, true>>;
    path: Joi.BoxStringSchema<Joi.Box<string, true>>;
}>>;
export declare const AddUrlModalIdentifyingPathComponents: RegisteredEvent<Joi.extractMap<{
    method: Joi.BoxStringSchema<Joi.Box<string, true>>;
    path: Joi.BoxStringSchema<Joi.Box<string, true>>;
}>>;
export declare const ShowInitialDocumentingView: RegisteredEvent<Joi.extractMap<{}>>;
export declare const UpdateContribution: RegisteredEvent<Joi.extractMap<{
    id: Joi.BoxStringSchema<Joi.Box<string, true>>;
    purpose: Joi.BoxStringSchema<Joi.Box<string, true>>;
    value: Joi.BoxStringSchema<Joi.Box<string, true>>;
}>>;
