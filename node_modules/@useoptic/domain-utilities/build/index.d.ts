import { IHttpInteraction } from '@useoptic/domain-types';
export { StableHasher } from './coverage';
export declare function universeFromEvents(events: any[]): {
    rfcState: any;
    eventStore: any;
    rfcId: string;
    rfcService: any;
};
export declare function universeFromEventsAndAdditionalCommands(events: any[], commandsContext: any, commands: any[]): {
    rfcState: any;
    eventStore: any;
    rfcId: string;
    rfcService: any;
};
export declare function cachingResolversAndRfcStateFromEvents(events: any[], extraCommands: any[]): {
    resolvers: any;
    rfcState: any;
};
export declare function cachingResolversAndRfcStateFromEventsAndAdditionalCommands(events: any[], commandsContext: any, additionalCommands: any[]): {
    resolvers: any;
    rfcState: any;
};
export declare function cachingResolversAndRfcStateFromEventsAndAdditionalCommandsSeq(events: any[], commandsContext: any, additionalCommandsSeq: any): {
    resolvers: any;
    rfcState: any;
};
export declare function rfcStateFromEvents(events: any[]): any;
export declare function reportFromEventsAndInteractions(shapesResolvers: any, events: any[], interactions: any[]): any;
export declare function reportFromRfcStateAndInteractions(shapesResolvers: any, rfcState: any, interactions: any[]): any;
export declare function serializeReport(report: any): any;
export declare function deserializeInteractions(serializedInteractions: any): any;
export declare function diffFromRfcStateAndInteractions(shapesResolvers: any, rfcState: any, interactions: IHttpInteraction[]): any;
export declare function normalizedDiffFromRfcStateAndInteractions(shapesResolvers: any, rfcState: any, interactions: IHttpInteraction[]): any;
//# sourceMappingURL=index.d.ts.map