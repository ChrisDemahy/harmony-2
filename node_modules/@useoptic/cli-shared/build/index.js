"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefaultIdGenerator = exports.delay = exports.cleanupAndExit = exports.loadPathsAndConfig = exports.makeUiBaseUrl = exports.promiseFromOptic = exports.userDebugLogger = exports.developerDebugLogger = exports.Command = void 0;
const cli_config_1 = require("@useoptic/cli-config");
////////////////////////////////////////////////////////////////////////////////
const command_1 = require("@oclif/command");
Object.defineProperty(exports, "Command", { enumerable: true, get: function () { return command_1.Command; } });
////////////////////////////////////////////////////////////////////////////////
var saas_client_1 = require("./saas-client");
Object.defineProperty(exports, "SaasClient", { enumerable: true, get: function () { return saas_client_1.Client; } });
////////////////////////////////////////////////////////////////////////////////
var command_and_proxy_session_manager_1 = require("./command-and-proxy-session-manager");
Object.defineProperty(exports, "CommandAndProxySessionManager", { enumerable: true, get: function () { return command_and_proxy_session_manager_1.CommandAndProxySessionManager; } });
var command_session_1 = require("./command-session");
Object.defineProperty(exports, "CommandSession", { enumerable: true, get: function () { return command_session_1.CommandSession; } });
var httptoolkit_capturing_proxy_1 = require("./httptoolkit-capturing-proxy");
Object.defineProperty(exports, "HttpToolkitCapturingProxy", { enumerable: true, get: function () { return httptoolkit_capturing_proxy_1.HttpToolkitCapturingProxy; } });
////////////////////////////////////////////////////////////////////////////////
const logger_1 = require("./logger");
Object.defineProperty(exports, "developerDebugLogger", { enumerable: true, get: function () { return logger_1.developerDebugLogger; } });
Object.defineProperty(exports, "userDebugLogger", { enumerable: true, get: function () { return logger_1.userDebugLogger; } });
const conversation_1 = require("./conversation");
Object.defineProperty(exports, "promiseFromOptic", { enumerable: true, get: function () { return conversation_1.promiseFromOptic; } });
function makeUiBaseUrl(daemonState) {
    if (process.env.OPTIC_UI_HOST) {
        return process.env.OPTIC_UI_HOST;
    }
    return `http://localhost:${daemonState.port}`;
}
exports.makeUiBaseUrl = makeUiBaseUrl;
////////////////////////////////////////////////////////////////////////////////
var capture_saver_1 = require("./captures/avro/saas/capture-saver");
Object.defineProperty(exports, "SaasCaptureSaver", { enumerable: true, get: function () { return capture_saver_1.CaptureSaver; } });
var capture_saver_2 = require("./captures/avro/file-system/capture-saver");
Object.defineProperty(exports, "FileSystemAvroCaptureSaver", { enumerable: true, get: function () { return capture_saver_2.CaptureSaver; } });
var capture_loader_1 = require("./captures/avro/file-system/capture-loader");
Object.defineProperty(exports, "FileSystemAvroCaptureLoader", { enumerable: true, get: function () { return capture_loader_1.CaptureLoader; } });
////////////////////////////////////////////////////////////////////////////////
var conversation_2 = require("./conversation");
Object.defineProperty(exports, "fromOptic", { enumerable: true, get: function () { return conversation_2.fromOptic; } });
Object.defineProperty(exports, "errorFromOptic", { enumerable: true, get: function () { return conversation_2.errorFromOptic; } });
Object.defineProperty(exports, "warningFromOptic", { enumerable: true, get: function () { return conversation_2.warningFromOptic; } });
////////////////////////////////////////////////////////////////////////////////
async function loadPathsAndConfig(cli) {
    try {
        const paths = await cli_config_1.getPathsRelativeToConfig();
        const config = await cli_config_1.readApiConfig(paths.configPath);
        return {
            paths,
            config,
        };
    }
    catch (e) {
        logger_1.userDebugLogger(e);
        if (e instanceof cli_config_1.OpticConfigurationLocationFailure) {
            cli.log(conversation_1.fromOptic(`No Optic project found in this directory. Learn to add Optic to your project here ${conversation_1.colors.underline('https://app.useoptic.com')}`));
        }
        else if (e instanceof cli_config_1.InvalidOpticConfigurationSyntaxError) {
            cli.log(conversation_1.fromOptic(`The contents of optic.yml are not valid YAML`));
        }
        return await cleanupAndExit();
    }
}
exports.loadPathsAndConfig = loadPathsAndConfig;
function cleanupAndExit() {
    return process.exit(0);
}
exports.cleanupAndExit = cleanupAndExit;
////////////////////////////////////////////////////////////////////////////////
async function delay(milliseconds) {
    return new Promise((resolve, reject) => {
        setTimeout(resolve, milliseconds);
    });
}
exports.delay = delay;
////////////////////////////////////////////////////////////////////////////////
const uuid = __importStar(require("uuid"));
class DefaultIdGenerator {
    nextId() {
        return uuid.v4();
    }
}
exports.DefaultIdGenerator = DefaultIdGenerator;
////////////////////////////////////////////////////////////////////////////////
var config_1 = require("./config");
Object.defineProperty(exports, "createCliConfig", { enumerable: true, get: function () { return config_1.create; } });
Object.defineProperty(exports, "Env", { enumerable: true, get: function () { return config_1.Env; } });
Object.defineProperty(exports, "isEnvTrue", { enumerable: true, get: function () { return config_1.isEnvTrue; } });
Object.defineProperty(exports, "isEnvFalse", { enumerable: true, get: function () { return config_1.isEnvFalse; } });
