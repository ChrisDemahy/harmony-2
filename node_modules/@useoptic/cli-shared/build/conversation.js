"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.colors = exports.promiseFromOptic = exports.warningFromOptic = exports.errorFromOptic = exports.fromOptic = void 0;
const colors_1 = __importDefault(require("colors"));
exports.colors = colors_1.default;
const ora_1 = require("ora");
function fromOptic(msg) {
    return msg
        .split('\n')
        .map((line) => `${colors_1.default.cyan('[optic]')} ${line}`)
        .join('\n');
}
exports.fromOptic = fromOptic;
function errorFromOptic(msg) {
    return msg
        .split('\n')
        .map((line) => `${colors_1.default.cyan('[optic]')} ${colors_1.default.red(line)}`)
        .join('\n');
}
exports.errorFromOptic = errorFromOptic;
function warningFromOptic(msg) {
    return msg
        .split('\n')
        .map((line) => `${colors_1.default.cyan('[optic]')} ${colors_1.default.yellow(line)}`)
        .join('\n');
}
exports.warningFromOptic = warningFromOptic;
function promiseFromOptic(promise, msgOrOptions) {
    let options = typeof msgOrOptions === 'string'
        ? {
            text: msgOrOptions,
        }
        : msgOrOptions;
    return ora_1.promise(promise, Object.assign(Object.assign({}, options), { prefixText: colors_1.default.cyan('[optic]') }));
}
exports.promiseFromOptic = promiseFromOptic;
