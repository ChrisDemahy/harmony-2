/// <reference types="node" />
declare class JsonHttpClient {
    static verifyOkResponse(response: Response): Promise<string>;
    static handleJsonResponse(response: Response): Promise<any>;
    static getJson(url: string, additionalHeaders?: Record<string, string>): Promise<any>;
    static getJsonWithoutHandlingResponse(url: string): Promise<Response>;
    static postJsonString(url: string, body: string, additionalHeaders?: Record<string, string>): Promise<any>;
    static postJson(url: string, body: any, additionalHeaders?: Record<string, string>): Promise<any>;
    static patchJsonString(url: string, body: string, additionalHeaders?: Record<string, string>): Promise<any>;
    static patchJson(url: string, body: any, additionalHeaders?: Record<string, string>): Promise<any>;
    static postJsonWithoutBody(url: string, additionalHeaders?: Record<string, string>): Promise<any>;
    static getJsonAsText(url: string): Promise<string>;
    static putJson(url: string, body: object, additionalHeaders?: Record<string, string>): Promise<any>;
    static putJsonString(url: string, body: string, additionalHeaders?: Record<string, string>): Promise<any>;
    static putBytes(url: string, body: Buffer, additionalHeaders?: Record<string, string>): Promise<string>;
}
export { JsonHttpClient };
//# sourceMappingURL=json-http-client.d.ts.map