import { DiffQueries, ProgressStream as DiffProgressStream } from './diffs';
export declare class SessionsManager {
    private sessions;
    private create;
    start(path: string): Promise<Session>;
    findById(sessionId: string): Session | undefined;
}
export declare class Session {
    readonly id: string;
    readonly path: string;
    constructor(id: string, path: string);
    diffs: SessionDiffs | null;
    start(): Promise<void>;
    diffCapture(captureId: string, events?: Array<{
        [key: string]: any;
    }>, endpoints?: Array<{
        pathId: string;
        method: string;
    }>): Promise<string>;
    diffProgress(diffId: string): DiffProgressStream | undefined;
    diffQueries(diffId: string): DiffQueries | undefined;
    stop(): Promise<void>;
}
declare class SessionDiffs {
    readonly configPath: string;
    readonly opticIgnorePath: string;
    readonly capturesPath: string;
    readonly specPath: string;
    private diffsById;
    private activeDiffsByCaptureId;
    constructor(configPath: string, opticIgnorePath: string, capturesPath: string, specPath: string);
    startDiff(captureId: string, events?: Array<{
        [key: string]: any;
    }>, endpoints?: Array<{
        pathId: string;
        method: string;
    }>): Promise<string>;
    progress(diffId: string): DiffProgressStream | undefined;
    queries(diffId: string): DiffQueries | undefined;
}
export {};
//# sourceMappingURL=sessions.d.ts.map